#!/usr/bin/env false bash

if [ -z ${VSI_COMMON_DIR+set} ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.."; pwd)"
fi

# Source the environment
# This disables the smart mechanism in env.bsh that prevents multiple sourcing of env.bsh
unset unsetup_vsi_common
source "${VSI_COMMON_DIR}/env.bsh"
source "${VSI_COMMON_DIR}/linux/just_files/just_functions.bsh"

#*# just/just_env

#**
# .. default-domain:: bash
#
# ===========
# Environment
# ===========
#
# .. file:: just_env
#
# :Arguments: ``$1`` - The project environment filename. Argument to source_environment_files
# :Parameters: ``VSI_COMMON_DIR`` - :envvar:`VSI_COMMON_DIR` should already be set to the vsi_common source directory
#
#   If another file is needed to load the project environment successfully, then it should be added to the just_plugins
#
# :Outputs: :envvar:`JUST_PATH_ESC` - Same as :envvar:`VSI_PATH_ESC`, but without using :file:`common_source.sh`
#
# Source the project environment. Loads the core components of just needed to load the project environment successfully.
#
# .. seealso::
#   just_plugins, :file:`.justplugins` :envvar:`JUST_PLUGIN_FILE`
#
# .. envvar:: JUST_PATH_ESC
#
# Path escape string for windows path translation
#
# .. seealso::
#   :envvar:`VSI_PATH_ESC`
#**

if [ "${OS-}" = "Windows_NT" ] && [[ ! ${OSTYPE-} == cygwin* ]]; then
  export JUST_PATH_ESC='/'
else
  export JUST_PATH_ESC=''
fi
source_environment_files "${1}"

if [ "${OS-}" = "Windows_NT" ]; then
  auto_path_escape
fi
