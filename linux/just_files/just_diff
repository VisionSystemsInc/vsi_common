#!/usr/bin/env bash

#*# just/just_diff

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.."; pwd)"
fi

#**
# .. default-domain:: bash
#
# ===========================
# Updating a just environment
# ===========================
#
# There are over half a dozen files to a just environment, and keeping track of what changes from one version of just to another can be very difficult. :file:`just_diff` will give you a diff output of two subsequent calls to :file:`new_just`
#
# .. file:: just_diff
#
# Prints the difference between the output of :file:`new_just` for two different versions
#
# :Arguments: * ``$1`` - Version 1 to compare with. Can be a SHA, tag, etc... Use -- to autodetect assuming external/vsi_common. Can also be ``--help`` to print :file:`new_just` help
#             * ``$2`` - Version 2 to compare with. Can be a SHA, tag, etc... Use -- for autodetect HEAD assuming external/vsi_common
#             * [``$3`` ...] - Flags to pass to :file:`new_just`
# :Parameters: ``JUST_DIFF`` - The diff program used on two directories, such as ``meld``. Default: ``colordiff`` if it exists, else ``diff``.
#
# Example
# -------
#
# Show the difference between your current version and the latest tag, assuming you are in vsi_common and have already checked out the newest commit
#
# .. code-block::
#
#   just_diff "$(git rev-parse HEAD)" "$(git describe --abbrev=0 --tags origin/main)"
#
# Another use case, is in a ``just`` project, if you have checkout out the newest vsi_common commit, but not commit that change to the project:
#
# .. code-block::
#
#   just_diff -- --
#**

set -eu

if [ "${1}" = "--help" ]; then
  new_just --help
  exit "${?}"
fi

if [ "${1}" = "--" ]; then
  version1="$(git diff --raw "${VSI_COMMON_DIR}" | awk '{print $3}')"
else
  version1="${1}"
fi
if [ "${2}" = "--" ]; then
  version2="$(cd "${VSI_COMMON_DIR}"; git rev-parse HEAD)"
else
  version2="${2}"
fi
shift 2

# Self cleaning tmp dir
declare -r tmp_dir="$(mktemp -d)"
atexit()
{
  cd /
  rm -rf "${tmp_dir}"
}
trap "atexit" EXIT

vsi_common_dir="${tmp_dir}/vsi_common"
version1_dir="${tmp_dir}/v1/proj"
version2_dir="${tmp_dir}/v2/proj"
mkdir -p "${vsi_common_dir}"
mkdir -p "${version1_dir}"
mkdir -p "${version2_dir}"

git clone https://github.com/VisionSystemsInc/vsi_common.git "${vsi_common_dir}"

pushd "${vsi_common_dir}" &> /dev/null
  git checkout "${version1}"
  pushd "${version1_dir}" &> /dev/null
    "${vsi_common_dir}/linux/just_files/new_just" --defaults --continue ${@+"${@}"} 1>&2
  popd &> /dev/null

  git checkout "${version2}"
  pushd "${version2_dir}" &> /dev/null
    "${vsi_common_dir}/linux/just_files/new_just" --defaults --continue ${@+"${@}"} 1>&2
  popd &> /dev/null
popd &> /dev/null

if command -v colordiff &> /dev/null; then
  : ${JUST_DIFF=colordiff}
else
  if [[ ${OSTYPE-} = darwin* ]]; then
    : ${JUST_DIFF=diff}
  else
    : ${JUST_DIFF=diff --color=always}
  fi
fi

if [[ ${JUST_DIFF} = diff\ * ]] || [ "${JUST_DIFF}" = "colordiff" ]; then
  ${JUST_DIFF} -u -r -I '^\s*#' "${version1_dir}" "${version2_dir}"
else
  ${JUST_DIFF} "${version1_dir}" "${version2_dir}"
fi