#!/usr/bin/env bash

if [[ ${-} != *i* ]]; then
  source_once &> /dev/null && return 0
fi

#*# linux/postisin

#**
# ========
# Postisin
# ========
#
# .. default-domain:: bash
#
# .. file:: postisin
#
# :Arguments: * ``$1`` - Value to search for
#             * [``$2``...] - Values of array to search over
# :Output: Exit code is ``0`` for found, ``1`` for not found
#
# Bash CLI version of :func:`postisin`
#
# .. seealso::
#   :func:`postisin`
#**

#**
# .. function:: postisin
#
# :Arguments: * ``$1`` - Value to search for (can be regex)
#             * [``$2``...] - Values of array to search over
# :Output: Returns ``0`` for found, ``1`` for not found
#
# Checks if any element in the array ends with a value
#
# .. rubric:: Example
#
# .. code-block:: bash
#
#   postisin 3 11 22 33 44
#   # $? is 0
#   postisin 0 02 02 02
#   # $? is 1
#**
function postisin()
{
  local val
  local x

  val="${1}"
  shift 1
  for x in ${@+"${@}"}; do
    if [[ ${x} = *${val} ]]; then
      return 0
    fi
  done
  return 1
}

if [ "${BASH_SOURCE[0]}" = "${0}" ] || [ "$(basename "${BASH_SOURCE[0]}")" = "${0}" ]; then
  postisin "${@}"
  exit ${?}
fi