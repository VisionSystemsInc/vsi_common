#!/usr/bin/env bash
# J.U.S.T. - J.U.S.T. useful simple tasking

# Load environment variables
source "${VSI_COMMON_DIR}/linux/just_files/just_env" "$(dirname "${BASH_SOURCE[0]}")/example.env"

# # Example of example.env
# : ${EXAMPLE_CWD="${CWD-"$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"}"}
# : ${EXAMPLE_UID=$(id -u)
# : ${EXAMPLE_GID=$(id -g)
# : ${EXAMPLE_MAGIC_THRESHOLD=3.141592653}
# : ${EXAMPLE_FILE=tmp.txt}
# : ${EXAMPLE_NAME=$(basename "$(pwd)")}

### Functions
# Put functions here
function just_a_function()
{
  echo "${EXAMPLE_FILE} ${1} ${2}"
}

cd "${EXAMPLE_CWD}"
## Just modules

function caseify()
{
  local just_arg="${1}"
  shift 1
  case ${just_arg} in
    all) # Run all tests. A long help message can be continued to the next \
         # line by ending it with a backslash (\) and starting the next \
         # line with a #.
      justify a b
      justify c 111 222
      justify f1
      ;;
    a|b) # Show how to safely re-call caseify
      justify ${just_arg}_a ${just_arg}_b
      ;;
    a_a) # Show how to get [^_]*_ prefix removed
      echo A part ${just_arg#*_}
      ;;
    a_*) # Show how to get [^_]*_ prefix removed on variable
      ;;
    b_*) # Show default pattern catch
      echo "Caught b_ ${just_arg#*_}"
      ;;
    c) # Show how to consume extra arguments
      just_a_function "${1}" "${2}"
      extra_args=2
      ;;
    d) # Show example on how to use .justfile
      echo "EXAMPLE_FILE" > .justfile
      echo "blah.txt" >> .justfile
      ;;
    f1) # Show what happens when a command is allowed to fail
      echo "Attempting to fail gracefully"
      local JUST_IGNORE_EXIT_CODES=1
      return 1
      ;;
    f2) # Show what happens when a command is false
      echo "Failing unexpectedly"
      false
      ;;
    f3) # Show how to call caseify (via justify). For example try \
        # "./just_example f2 111"
      echo "Argument ${1} being consumed correctly"
      justify c "${1}" "${1}"
      extra_args=1
      ;;
    *)
      defaultify "${just_arg}" ${@+"${@}"}
      ;;
  esac
}

if ! command -v justify &> /dev/null; then caseify ${@+"${@}"};fi
