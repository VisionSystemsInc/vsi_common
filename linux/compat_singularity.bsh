#!/usr/bin/env false bash

if [[ ${-} != *i* ]]; then
  source_once &> /dev/null && return 0
fi

source "${VSI_COMMON_DIR}/linux/requirements.bsh"
source "${VSI_COMMON_DIR}/linux/aliases.bsh"

#*# linux/compat_singularity.bsh

#**
# ===================================
# Singularity Compatibility Variables
# ===================================
#
# .. default-domain:: bash
#
# .. file:: compat_singularity.bsh
#
# A collection of variables to help cope with the differences between singularity versions.
#**

function _compat_singularity_get_version()
{
  if [ -z "${_compat_singularity_version+set}" ]; then
    _compat_singularity_version="$("${SINGULARITY}" --version)"
    _compat_singularity_version="${_compat_singularity_version##* }"
    _compat_singularity_version="${_compat_singularity_version%%-*}"
  fi
}

#**
# .. function:: singularity_singularityenv_priority_bug
#
# In singularity 3.0-3.5, there is an ambiguity when it comes to the precedence of ``{VAR}`` vs ``SINGULARITYENV_{VAR}`` variables being inherited from the host.
#
# :Return Value: * ``0`` - Singularity has the ambiguity bug, and the value of the environment variable will be hard to predict
#                * ``1`` - Singularity does not have the ambiguity bug, and ``SINGULARITYENV_`` takes priority.
#
# .. seealso::
#
#    https://github.com/hpcng/singularity/issues/4827
#**
function singularity_singularityenv_priority_bug()
{
  if [ -z "${_singularity_singularityenv_priority_bug+set}" ]; then
    _compat_singularity_get_version
    if meet_requirements "${_compat_singularity_version}" '>=3.0' '<3.6'; then
      _singularity_singularityenv_priority_bug=0
    else
      _singularity_singularityenv_priority_bug=1
    fi
  fi

  return "${_singularity_singularityenv_priority_bug}"
}
