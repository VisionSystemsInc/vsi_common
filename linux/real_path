#!/usr/bin/env bash

if [[ ${-} != *i* ]]; then
  source_once &> /dev/null && return 0
fi

source "${VSI_COMMON_DIR}/linux/compat.bsh"

#*# linux/real_path

#**
# =========
# Real Path
# =========
#
# .. default-domain:: bash
#
# .. file:: real_path
#
# OS independent implementation of realpath
#
# Calls realpath if it exists, else a ``bash`` equivalent of it, :func:`real_path_manual` Mainly for Darwin where realpath doesn't always exist
#**

#**
# .. function:: real_path_manual
#
# :Arguments: ``$1`` - path to file object
# :Output: *stdout* - Full path to non-symlink file of ``$1``
#
# ``Bash`` implementation of realpath
#**
function real_path_manual()
{ # Mainly for Darwin
  pushd "$(dirname "${1}")" &> /dev/null
    local target="$(basename "${1}")"

    while [ -L "${target}" ]
    do
      target="$(readlink "${target}")"
      cd "$(dirname "${target}")"
      target="$(basename "${target}")"
    done

    local physical_dir="$(pwd -P)"

    if [ "${target}" = "." ]; then
      target=""
    else
      target="/${target}"
    fi
  popd &> /dev/null

  if [ "${physical_dir}" = "/" ]; then
    # Special case: because pwd and basename are both /, it became // because
    # of the previous if where it is not "."; also /. is a special case
    if [ "${target}" = "//" ] || [ "${target}" = "" ]; then
      echo /
    else
      echo "${target}"
    fi
  else
    echo "${physical_dir}${target}"
  fi
}

#**
# .. function:: real_path
#
# Helper function to either call ``realpath``, ``readlink -f`` or ``real_path_manual`` depending on what is available.
#**
# :nocov: No real point in cov reporting this, although
#         testing to the best of ability is still ok
if command -v realpath > /dev/null 2>&1 && realpath_behavior_nonexistent_path; then
  function real_path()
  {
    realpath ${@+"${@}"}
  }
elif readlink_behavior_nonexistent_path; then
  function real_path()
  {
    readlink -f ${@+"${@}"}
  }
else
  function real_path()
  {
    # Probably Darwin. Thanks Darwin! > : (
    for x in "${@}"; do
      real_path_manual "${x}"
    done
  }
fi
# :nocov:

if [ "${BASH_SOURCE[0]}" = "${0}" ] || [ "$(basename "${BASH_SOURCE[0]}")" = "${0}" ]; then
  real_path "${@}"
fi