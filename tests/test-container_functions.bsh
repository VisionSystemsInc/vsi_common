#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/just_files/container_functions.bsh"

begin_test "Translate paths"
(
  setup_test

  # Simple
  [ "$(translate_path /foo/boo /foo /bar)" = "/bar/boo" ]

  # Multiple
  [ "$(translate_path /foo/boo /grey /gray /foo /bar /stuff /things)" = "/bar/boo" ]

  # Miss
  [ "$(translate_path /food/boo /grey /gray /foo /bar /stuff /things)" = "/food/boo" ]

  # Windows Escaped style
  [ "$(translate_path //foo/boo /grey /gray /foo /bar /stuff /things)" = "/bar/boo" ]
)
end_test

begin_test "Container environment override"
(
  setup_test

  function test_echo()
  {
    echo ":${1}@${2}:"
  }

  JUST_PROJECT_PREFIX=FOO

  # None
  assert_str_eq "$(OS= container_environment_override test_echo)" ""

  # Windows
  assert_str_eq "$(OS=Windows_NT container_environment_override test_echo)" ":JUST_HOST_WINDOWS@1:"

  # Only _DOCKER
  export FOO_DIR_DOCKER=/blah
  assert_str_eq "$(OS= container_environment_override test_echo)" ":FOO_DIR@/blah:"

  # _DOCKER and "" should print
  export FOO_DIR=/stuff
  ans=":FOO_DIR_HOST@/stuff:"
  ans+=$'\n:FOO_DIR@/blah:'
  assert_str_eq "$(OS= container_environment_override test_echo)" "${ans}"

  # EXPORT_DOCKER
  ans+=$'\n:FOO_DIR_DOCKER@/blah:'
  assert_str_eq "$(EXPORT_DOCKER=1 OS= container_environment_override test_echo)" "${ans}"

  # Disable swap
  ans=":FOO_DIR@/stuff:"
  ans+=$'\n:FOO_DIR_DOCKER@/blah:'
  assert_str_eq "$(JUST_DISABLE_ENVIRONMENT_SWAP=1 OS= container_environment_override test_echo)" "${ans}"

  # _HOST too. Issue #251
  export FOO_DIR_HOST=/hosty
  ans=":FOO_DIR@/blah:"
  ans+=$'\n:FOO_DIR_HOST@/hosty:'
  assert_str_eq "$(OS= container_environment_override test_echo)" "${ans}"
)
end_test