#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
# source "${VSI_COMMON_DIR}/linux/bin_utils.bsh"

test_lwhich()
{
  if [ "${1}" == "64" ]; then
    file_name="$(${LDCONFIG-ldconfig} -p | grep 'x86-64' | head -n 1)"
  else
    file_name="$(${LDCONFIG-ldconfig} -p | grep $'^\t' | grep -v 'x86-64' | head -n 1)"
  fi

  OLD_IFS="${IFS}"

  if [ "${file_name:+set}" = "set" ]; then
    answer="$(awk -F ' => ' '{print $2}' <<< "$(echo "${file_name}")")"
    file_name="$(awk '{print $1}' <<< "$(echo "${file_name}")")"

    # Try full filename, with one extension removed, with all extensions
    # removed, using only the first 4 chars, and a regex representing the first
    # four chars
    for test in "${file_name}" "${file_name%.*}" "${file_name%%.*}" \
                "${file_name:0:4}" "${file_name:0:3}[${file_name:3:1}]"; do
      IFS=$'\n'
      possibilities=($("${VSI_COMMON_DIR}"/linux/lwhich "${1}" "${test}"))
      IFS="${OLD_IFS}"
      "${VSI_COMMON_DIR}"/linux/isin "${answer}" "${possibilities[@]}"
    done

    # Cases guaranteed to fail to find a match: add a z in the front of the
    # filename; a regex where the 4th char must be different
    for test in "z${file_name}" "z${file_name%.*}" "z${file_name%%.*}" \
                "z${file_name:0:4}" "${file_name:0:3}[^${file_name:3:1}]${file_name:4}"; do
      IFS=$'\n'
      possibilities=($("${VSI_COMMON_DIR}"/linux/lwhich "${1}" "${test}"))
      IFS="${OLD_IFS}"
      not "${VSI_COMMON_DIR}"/linux/isin "${answer}" ${possibilities+"${possibilities[@]}"}
    done
  fi
}

if [ -e "/etc/ld.so.cache" ] || grep -q '/etc/ld\.so\.conf' "$(command -v ldconfig)" &> /dev/null; then
  if ${LDCONFIG-ldconfig} -p | !grep x86-64 &> /dev/null; then
    skip_next_test
  fi
elif [ "$(uname -m)" != "x86_64" ]; then
  skip_next_test
fi
begin_test "lwhich 64"
(
  setup_test

  test_lwhich 64
)
end_test

if [ -e "/etc/ld.so.cache" ] || grep -q '/etc/ld\.so\.conf' "$(command -v ldconfig)" &> /dev/null; then
  if [ "$(${LDCONFIG-ldconfig} -p | grep -v 'x86-64' | wc -l)" -lt "2" ]; then
    skip_next_test
  fi
elif ! [[ $(uname -m) =~ i[3-6]86 ]]; then
  skip_next_test
fi
begin_test "lwhich 32"
(
  setup_test

  test_lwhich 32
)
end_test

if [ -e "/etc/ld.so.cache" ] || grep -q '/etc/ld\.so\.conf' "$(command -v ldconfig)" &> /dev/null; then
  filename="$(${LDCONFIG-ldconfig} -p | tail -n 1 | awk -F ' => ' '{print $2}')"
else
  filename="$(find /lib /usr/local/lib /usr/lib /usr/bin -maxdepth 1 \( -name \*.so -o -name \*.dylib -o -name \*.dll \) -print -quit 2>/dev/null || :)"
fi
if [ "${filename}" = "" ]; then
  skip_next_test
fi
begin_test "lwhich LD_LIBRARY_PATH"
(
  setup_test

  source "${VSI_COMMON_DIR}/linux/bin_utils.bsh"

  answer="${TESTDIR}/libqwertyuiop.so"
  bits=($(object_bits "${filename}"))
  # Just pick the last in case of multiple arches
  bits=("${bits[${#bits[@]}-1]}")

  cp "${filename}" "${answer}"
  filename="${answer##*/}"

  # Fail case
  OLD_IFS="${IFS}"
  IFS=$'\n'
  possibilities=($("${VSI_COMMON_DIR}"/linux/lwhich --${bits} "${filename%%.*}"))
  IFS="${OLD_IFS}"
  not "${VSI_COMMON_DIR}"/linux/isin "${answer}" ${possibilities+"${possibilities[@]}"}

  # Success case
  if [[ ${OSTYPE-} = darwin* ]]; then
    export MACLD_LIBRARY_PATH="${TESTDIR}"
  else
    export LD_LIBRARY_PATH="${TESTDIR}"
  fi
  IFS=$'\n'
  possibilities=($(bash -xv "${VSI_COMMON_DIR}"/linux/lwhich --${bits} "${filename%%.*}"))
  IFS="${OLD_IFS}"
  echo foo
  "${VSI_COMMON_DIR}"/linux/isin "${answer}" ${possibilities+"${possibilities[@]}"}
)
end_test
