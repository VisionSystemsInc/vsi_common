#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/pre-commit_filter_lines"

function GiT()
{
  case "${*}" in
    "log --format=%s -n 1 0000000000000000000000000000000000000000")
      return 1
      ;;
    "log --format=%s -n 1 1")
      echo "Normal message"
      ;;
    "log --format=%s -n 1 2")
      echo "Don't check [skip ci]"
      ;;
    "log --format=%s -n 1 3")
      echo "Don't check [ci skip]"
      ;;
  esac
}

GIT=GiT

begin_test "precommit::filter_line"
(
  setup_test

  assert_str_eq "$(precommit::filter_line foo 0000000000000000000000000000000000000000 bar 0)" "foo 0000000000000000000000000000000000000000 bar 0"
  assert_str_eq "$(precommit::filter_line foo 1 bar 0)" "foo 1 bar 0"
  assert_str_eq "$(precommit::filter_line foo 2 bar 0)" ""
  assert_str_eq "$(precommit::filter_line foo 3 bar 0)" ""
)
end_test

begin_test "precommit::filter_lines"
(
  setup_test

  assert_str_eq "$(precommit::filter_line foo 2 bar 0)" ""

  questions=("foo 0000000000000000000000000000000000000000 bar 0"
             "foo 2 bar 0"
             "foo 1 bar 0"
             "foo 3 bar 0")
  answers=("foo 0000000000000000000000000000000000000000 bar 0"
           "foo 1 bar 0")

  questions=$(IFS=$'\n'; echo "${questions[*]}")
  answers=$(IFS=$'\n'; echo "${answers[*]}")

  assert_str_eq "$(precommit::filter_lines <<< "${questions}")" "${answers}"
)
end_test
