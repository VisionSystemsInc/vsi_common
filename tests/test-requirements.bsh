#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/requirements.bsh"

begin_test "meet_requirements"
(
  setup_test

  # bogus test
  meet_requirements 1 ~1 || rv=${?}
  [ "${rv}" = "2" ]

  # ==
  meet_requirements 1 ==1
  not meet_requirements 1 ==1.1
  # =
  meet_requirements 1 =1
  not meet_requirements 1 =1.1
  # !=
  not meet_requirements 1 !=1
  meet_requirements 1 !=1.1

  # <
  meet_requirements 1 '<1.1'
  not meet_requirements 1 '<1'
  not meet_requirements 1.1 '<1'
  # <=
  meet_requirements 1 '<=1.1'
  meet_requirements 1 '<=1'
  not meet_requirements 1.1 '<=1'

  # >
  not meet_requirements 1 '>1.1'
  not meet_requirements 1 '>1'
  meet_requirements 1.1 '>1'
  # >=
  not meet_requirements 1 '>=1.1'
  meet_requirements 1 '>=1'
  meet_requirements 1.1 '>=1'

  # == and !=
  not meet_requirements 1.0.0 ==1.0.0 !=1.0.0
  meet_requirements 1.0.0 ==1.0.0 !=1.0.1

  # = and !=
  not meet_requirements 1.0.0 =1.0.0 !=1.0.0
  meet_requirements 1.0.0 =1.0.0 !=1.0.1

  meet_requirements 1.0.0 '>0.9.0' '<1.0.1'
  not meet_requirements 1.0.0 '>0.9.0' '<1.0.0'

  # complex rules
  not meet_requirements 1 '>0.5' '<1.0'
  meet_requirements 1 '>0.5' '<1.5'
  meet_requirements 1 '>0.5' '<1.5' or ">2.5" "<3.5"
  not meet_requirements 2 '>0.5' '<1.5' or ">2.5" "<3.5"
  meet_requirements 3 '>0.5' '<1.5' or ">2.5" "<3.5"
  not meet_requirements 4 '>0.5' '<1.5' or ">2.5" "<3.5"
)
end_test

begin_test "version ="
(
  setup_test

  version_eq 1.0.0 1.0.0
  version_eq 1.0.0a 1.0.0a
  version_eq 1.0.0 1.0
  version_eq 1.0.0 1
  version_eq 1.0.0a 1a
  not version_eq 1.0.1 1.0.0
  not version_eq 1.0.0 1.0.1
  not version_eq 1.0.0a 1.0.0b
  not version_eq 1.0.0b 1a

  not version_eq 1.2.3 1.2.3a
)
end_test

begin_test "version <"
(
  setup_test

  version_lt 1.0.0 1.0.0.1
  version_lt 1.0.0 1.0.1
  version_lt 1.0.0 1.1.0
  version_lt 1.0.0 1.1
  version_lt 1.0.0 2.0.0
  version_lt 1.0.0 2.0
  version_lt 1.0.0 2
  not version_lt 1.0.0 1.0.0
  not version_lt 1.0.0 0.100.0
  not version_lt 1.0.0 0.100.100

  not version_lt 1.2.3rc1 1.2.3rc1
  version_lt 1.2.3a 1.2.3b
  not version_lt 1.2.3b 1.2.3a

  not version_lt 1.2.3 1.2.3a
  version_lt 1.2.3a 1.2.3
)
end_test

begin_test "version >"
(
  setup_test

  version_gt 1.0.0.1 1
  version_gt 1.0.1 1
  version_gt 1.1.0 1
  version_gt 1.1 1
  version_gt 2.0.0 1.0.0
  version_gt 2.0 1.0.0
  version_gt 2 1.0.0
  not version_gt 1.0.0 1.0.0
  not version_gt 0.100.0 1.0.0
  not version_gt 0.100.100 1.0.0

  not version_gt 1.2.3rc1 1.2.3rc1
  not version_gt 1.2.3a 1.2.3b
  version_gt 1.2.3b 1.2.3a

  not version_gt 1.2.3a 1.2.3
  version_gt 1.2.3 1.2.3a
)
end_test

begin_test "Split version"
(
  setup_test

  split_version_string v 1
  assert_array_values v 1

  split_version_string v 1rc1
  assert_array_values v 1 "rc1"

  split_version_string v 1-beta2
  assert_array_values v 1 "-beta2"

  split_version_string v 1.2.3
  assert_array_values v 1 2 3

  split_version_string v 1.3.2.5r7
  assert_array_values v 1 3 2 5 "r7"
)
end_test

begin_test "Split version and remainder"
(
  setup_test

  split_version_string_and_remainder v r 1
  assert_array_values v 1
  [ "${r}" = "" ]

  split_version_string_and_remainder v r 1rc1
  assert_array_values v 1
  [ "${r}" = "rc1" ]

  split_version_string_and_remainder v r 1-beta2
  assert_array_values v 1
  [ "${r}" = "-beta2" ]

  split_version_string_and_remainder v r 1.2.3
  assert_array_values v 1 2 3
  [ "${r}" = "" ]

  split_version_string_and_remainder v r 1.3.2.5r7
  assert_array_values v 1 3 2 5
  [ "${r}" = "r7" ]
)
end_test
