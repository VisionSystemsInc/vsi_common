#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${VSI_COMMON_DIR}/tests/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/just_files/docker_compose_override"
source "${VSI_COMMON_DIR}/linux/aliases.bsh"

function head()
{
  echo -e "version: '${1-3.2}'\nservices:"
}

function service()
{
  echo -e "\n  ${1}:"
  echo -e "    x-bugfix:"
}

function environment()
{
  echo -e "\n    environment:"
}

function envi()
{
  echo -e "\n      - ${1}"
}

if ! "${DOCKER_COMPOSE[@]}" &> /dev/null; then
  skip_next_test
fi
begin_test "Generate docker compose override internal volumes"
(
  setup_test

  echo "version: '3.2'
services:
  dummy:
    image: alpine
    volumes:
    - int:/notint
    - .:/notsrc
    - lint:/notlint
  test_hay:
    image: alpine
    volumes:
    - int:/int
    - .:/src
    - lint:/lint
volumes:
  lint:
  int:" > dc.yml

  DOCKER_COMPOSE_FILES=(dc.yml)
  override="$(generate_docker_compose_override TEST dummy test_hay)"

  ans="$(head)$(service dummy)$(environment)"
  ans+="$(envi JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES=/notint///notlint)"
  if [ "${OS-}" = "Windows_NT" ]; then
    ans+="$(envi "JUST_HOST_WINDOWS=1")"
  fi
  ans+="$(service test_hay)$(environment)"
  ans+="$(envi JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES=/int///lint)"
  if [ "${OS-}" = "Windows_NT" ]; then
    ans+="$(envi "JUST_HOST_WINDOWS=1")"
  fi
  assert_str_eq "${override}" "${ans}"
)
end_test

if ! "${DOCKER_COMPOSE[@]}" &> /dev/null; then
  skip_next_test
fi
begin_test "Generate docker compose override long syntax volume"
(
  setup_test

  echo "version: '3.2'
services:
  dummy:
    image: alpine
    volumes:
    - type: volume
      source: int
      target: /notint
    - type: bind
      source: .
      target: /notsrc
      read_only: true
    - type: volume
      source: lint
      target: /notlint
  test_hay:
    image: alpine
    volumes:
    - type: volume
      source: int
      target: /int
    - type: bind
      source: .
      target: /src
      read_only: true
    - short:/syntax:ro
    - type: volume
      source: foo
      target: /bar
      read_only: true
      volume:
        nocopy: true
    - type: volume
      source: lint
      target: /lint
volumes:
  short:
  lint:
  int:
  foo:" > dc.yml

  DOCKER_COMPOSE_FILES=(dc.yml)
  override="$(generate_docker_compose_override TEST dummy test_hay)"

  ans="$(head)$(service dummy)$(environment)"
  ans+="$(envi JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES=/notint///notlint)"
  if [ "${OS-}" = "Windows_NT" ]; then
    ans+="$(envi "JUST_HOST_WINDOWS=1")"
  fi
  ans+="$(service test_hay)$(environment)"
  ans+="$(envi JUST_DOCKER_ENTRYPOINT_INTERNAL_VOLUMES=/int///lint)"
  ans+="$(envi JUST_DOCKER_ENTRYPOINT_INTERNAL_RO_VOLUMES=/syntax///bar)"
  if [ "${OS-}" = "Windows_NT" ]; then
    ans+="$(envi "JUST_HOST_WINDOWS=1")"
  fi
  assert_str_eq "${override}" "${ans}"
)
end_test
