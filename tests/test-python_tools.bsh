#!/usr/bin/env bash

if [ -z ${VSI_COMMON_DIR+set} ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/python_tools.bsh"

begin_test "Array to python ast literal eval list of strings"
(
  setup_test

  x=(11 22 33)
  is_array x
  array_to_python_ast_list_of_strings y "${x[@]}"
  [ "${y}" = '["11", "22", "33"]' ]

  x=('1"1' "2'2" "3  3")
  array_to_python_ast_list_of_strings z "${x[@]}"
  [ "${z}" = '["1\"1", "2'"'"'2", "3  3"]' ]

  x=()
  array_to_python_ast_list_of_strings w ${x[@]+"${x[@]}"}
  [ "${w}" = '[]' ]
)
end_test

begin_test "Array to python ast literal eval list of literals"
(
  setup_test

  x=(11 '2"2' '3  3')
  is_array x
  array_to_python_ast_list_of_literals y "${x[@]}"
  [ "${y}" = '[11, 2"2, 3  3]' ]

  x=()
  array_to_python_ast_list_of_literals y ${x[@]+"${x[@]}"}
  [ "${y}" = '[]' ]
)
end_test

begin_test "Common Array to python function"
(
  setup_test

  x=('1"1' "2'2" "3  3")
  _array_to_python '[' ']' "" y "${x[@]}"
  [ "${y}" = '[1"1, 2'"'"'2, 3  3]' ]

  _array_to_python '(' ')' "'" y ${x[@]+"${x[@]}"}
  [ "${y}" = "('1\"1', '2\\'2', '3  3')" ]

  _array_to_python '{' '}' '"' y ${x[@]+"${x[@]}"}
  [ "${y}" = "{\"1\\\"1\", \"2'2\", \"3  3\"}" ]

  _array_to_python 'set((' '))' '"' y ${x[@]+"${x[@]}"}
  [ "${y}" = "set((\"1\\\"1\", \"2'2\", \"3  3\"))" ]

  y=('"1\"1"' "\"2'2\"" '"3  3"')
  _array_to_python '[' ']' '' y ${y[@]+"${y[@]}"}
  [ "${y}" = "[\"1\\\"1\", \"2'2\", \"3  3\"]" ]
  is_array x
  not is_array y

  # Make sure local variables aren't leaking
  not declare -p __array_to_python_open_array
  not declare -p __array_to_python_close_array
  not declare -p __array_to_python_quote_element
  not declare -p __array_to_python_string
  not declare -p __array_to_python_indirect
)
end_test

begin_expected_fail_test "Array to python ast literal eval list of strings lose locality"
(
  setup_test

  function foo()
  {
    local x=11
    x[1]=22
    x[2]=33
    array_to_python_ast_list_of_strings x "${x[@]}"
    [ "${x}" = '["11", "22", "33"]' ]
  }
  foo
  # This line should fail, but doesn't
  begin_fail_zone
  not [ "${x-}" = '["11", "22", "33"]' ]
)
end_test
