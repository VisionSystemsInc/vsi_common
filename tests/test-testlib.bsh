#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"

begin_test "Test Success"
(
  setup_test

  echo "Working test ${@+${@}}"
)
end_test

begin_expected_fail_test "Test Expected Fail"
(
  setup_test

  echo "Failing test ${@+${@}}"

  begin_fail_zone
  false
)
end_test

begin_required_fail_test "Test Required Fail"
(
  setup_test

  echo "Required fail test ${@+${@}}"

  begin_fail_zone
  false
)
end_test

skip_next_test
begin_test "Test Skipped Test"
(
  setup_test

  false
)
end_test

# I lose the cwd when I run begin_test
THIS_TEST_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"; pwd)"
begin_test "Run actual failing tests"
(
  setup_test
  # Prevent TESTLIB vars interferring with the QUIZ
  unset TESTLIB_SKIP_TESTS TESTLIB_RUN_SINGLE_TEST TESTLIB_STOP_AFTER_FAILS

  # Output this whole test to stdout. It make reading logs a LOT easier
  TESTLIB_SUMMARY_DIR="${TESTDIR}" "${THIS_TEST_DIR}/quiz-testlib.bsh" 2>&1 || :

  summary_file="${TESTDIR}/quiz-testlib.bsh"

  # There should be 8 failures and 2 unexpected successes!
  [ "$(awk '{print $2" "$3}' "${summary_file}")" = "8 2" ]
)
end_test

begin_test "Test setup and teardown failures"
(
  setup_test
  TESTLIB_SUMMARY_DIR= "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"

  ! env TESTLIB_SUMMARY_DIR= SETUP_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  [[ $(TESTLIB_SUMMARY_DIR= SETUP_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh" 2>&1) = *Calling\ setup\(\)* ]]
  ! env TESTLIB_SUMMARY_DIR= TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  # There is no text test for teardown yet
)
end_test

begin_test "Test setup and teardown are skipped with no tests"
(
  setup_test

  TESTLIB_RUN_SINGLE_TEST="A passing test3" SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  ! env TESTLIB_RUN_SINGLE_TEST="A passing test2" SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  ! env TESTLIB_RUN_SINGLE_TEST="A passing test" SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  TESTLIB_SKIP_TESTS="A passing test" SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  ! env TESTLIB_SKIP_TESTS="A passing test2" SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
  ! env TESTLIB_SKIP_TESTS='A passing test$' SETUP_CMD=false TEARDOWN_CMD=false "${THIS_TEST_DIR}/quiz-testlib_setup.bsh"
)
end_test

begin_test "Test TESTLIB_STOP_AFTER_FAILS"
(
  setup_test
  unset TESTLIB_SKIP_TESTS TESTLIB_RUN_SINGLE_TEST

  summary_file="${TESTDIR}/quiz-testlib.bsh"

  # Zero already tested above

  TESTLIB_STOP_AFTER_FAILS=1 TESTLIB_SUMMARY_DIR="${TESTDIR}" "${THIS_TEST_DIR}/quiz-testlib.bsh" 2>&1 || :
  # There should be 1 failure, 9 skips
  [ "$(awk '{print $2" "$6}' "${summary_file}")" = "1 9" ]

  TESTLIB_STOP_AFTER_FAILS=2 TESTLIB_SUMMARY_DIR="${TESTDIR}" "${THIS_TEST_DIR}/quiz-testlib.bsh" 2>&1 || :
  # There should be 2 failure, 8 skips
  [ "$(awk '{print $2" "$6}' "${summary_file}")" = "2 8" ]
)
end_test

begin_expected_fail_test "Test expected to fail in a fail zone"
(
  setup_test

  begin_fail_zone
  true
  end_fail_zone

  true

  begin_fail_zone
  false
)
end_test
