#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/just_files/just_singularity_functions.bsh"

SINGULARITY=SiNgUlArItY

function SiNgUlArItY()
{
  local args
  local env
  local e

  args=(${@+"${@}"})
  declare -p args > "${TESTDIR}/tappoint.txt"
  env=($(compgen -A export SINGULARITYENV_ | sort))
  declare -p env >> "${TESTDIR}/tappoint.txt"
  for e in ${env[@]+"${env[@]}"}; do
    declare -p "${e}" >> "${TESTDIR}/tappoint.txt"
  done
}

begin_test "singular-compose"
(
  setup_test

  export JUSTFILE="${TESTDIR}/Justfile"
  export JUST_PROJECT_PREFIX=PREFIX
  echo "instances+=(foo3)
        foo3_volumes=('${TESTDIR}/foo:/bar:ro')
        foo3_environment=('FOO' 'BAR FAR  BOO '
                          'BAR' '12345')
        foo3_image=\"${TESTDIR}/my_image.simg\"
        foo3_singular_flags=(-c -e)
        foo3_instance=bar4

        foo1_environment+=('DONT' 'USE')" > ${TESTDIR}/singular-compose.env

  echo "instances+=(foo1)
        foo1_volumes=('${TESTDIR}/foo:/bar:ro')
        foo1_image=\"${TESTDIR}/image.simg\"
        foo1_singular_flags=(-c -e)
        foo1_instance=bar5" > ${TESTDIR}/singular-compose2.env
  echo "foo1_environment+=('FOO' 'BAR FAR  BOO '
                           'BAR' '12345')" > ${TESTDIR}/singular-compose3.env

  # "Simple" case
  ( # Put in subprocess because loading singular-compose.env files can contaminate each other
    singular_defaultify singular-compose run foo3
    source "${TESTDIR}/tappoint.txt"
    env_vars=(SINGULARITYENV_BAR SINGULARITYENV_FOO)
    if [ "${OS-}" = "Windows_NT" ]; then
      env_vars+=(SINGULARITYENV_JUST_HOST_WINDOWS)
    fi
    assert_array_values env "${env_vars[@]}"
    [ "${SINGULARITYENV_BAR}" = "12345" ]
    [ "${SINGULARITYENV_FOO}" = "BAR FAR  BOO " ]
    if [ "${OS-}" = "Windows_NT" ]; then
      [ "${SINGULARITYENV_JUST_HOST_WINDOWS}" = "1" ]
    fi
    assert_array_values args run -B "$(get_mktemp_dir):/tmp" -B "${TESTDIR}/foo:/bar:ro" -c -e "${TESTDIR}/my_image.simg"
  )

  # Disable SINGULARITY_ADD_TMP_DIR
  (
    export SINGULARITY_ADD_TMP_DIR=0
    singular_defaultify singular-compose run foo3
    source "${TESTDIR}/tappoint.txt"
    env_vars=(SINGULARITYENV_BAR SINGULARITYENV_FOO)
    if [ "${OS-}" = "Windows_NT" ]; then
      env_vars+=(SINGULARITYENV_JUST_HOST_WINDOWS)
    fi
    assert_array_values env "${env_vars[@]}"
    [ "${SINGULARITYENV_BAR}" = "12345" ]
    [ "${SINGULARITYENV_FOO}" = "BAR FAR  BOO " ]
    if [ "${OS-}" = "Windows_NT" ]; then
      [ "${SINGULARITYENV_JUST_HOST_WINDOWS}" = "1" ]
    fi
    assert_array_values args run -B "${TESTDIR}/foo:/bar:ro" -c -e "${TESTDIR}/my_image.simg"
  )

  # -f flag
  (
    # It both fails and fails at failing!?
    # not singular_defaultify singular-compose -f "${TESTDIR}/singular-compose2.env" run foo3
    singular_defaultify singular-compose -f "${TESTDIR}/singular-compose2.env" \
        --file "${TESTDIR}/singular-compose3.env" run foo1
    source "${TESTDIR}/tappoint.txt"
    env_vars=(SINGULARITYENV_BAR SINGULARITYENV_FOO)
    if [ "${OS-}" = "Windows_NT" ]; then
      env_vars+=(SINGULARITYENV_JUST_HOST_WINDOWS)
    fi
    assert_array_values env "${env_vars[@]}"
    [ "${SINGULARITYENV_BAR}" = "12345" ]
    [ "${SINGULARITYENV_FOO}" = "BAR FAR  BOO " ]
    if [ "${OS-}" = "Windows_NT" ]; then
      [ "${SINGULARITYENV_JUST_HOST_WINDOWS}" = "1" ]
    fi
    assert_array_values args run -B "$(get_mktemp_dir):/tmp" -B "${TESTDIR}/foo:/bar:ro" -c -e "${TESTDIR}/image.simg"
  )

  # container_environment_override
  (
    export JUST_PROJECT_PREFIX=STUFF
    export STUFF_DIR_DOCKER=/bar
    export STUFF_DIR=/foo
    export STUFF_OK_DOCKER=55

    singular_defaultify singular-compose run foo3
    source "${TESTDIR}/tappoint.txt"
    env_vars=(SINGULARITYENV_BAR SINGULARITYENV_FOO)
    if [ "${OS-}" = "Windows_NT" ]; then
      env_vars+=(SINGULARITYENV_JUST_HOST_WINDOWS)
    fi
    env_vars+=(SINGULARITYENV_STUFF_DIR SINGULARITYENV_STUFF_DIR_HOST SINGULARITYENV_STUFF_OK)
    assert_array_values env "${env_vars[@]}"
    [ "${SINGULARITYENV_STUFF_DIR}" = "/bar" ]
    [ "${SINGULARITYENV_STUFF_DIR_HOST}" = "/foo" ]
    [ "${SINGULARITYENV_STUFF_OK}" = "55" ]
    [ "${SINGULARITYENV_BAR}" = "12345" ]
    [ "${SINGULARITYENV_FOO}" = "BAR FAR  BOO " ]
    if [ "${OS-}" = "Windows_NT" ]; then
      [ "${SINGULARITYENV_JUST_HOST_WINDOWS}" = "1" ]
    fi
    assert_array_values args run -B "$(get_mktemp_dir):/tmp" -B "${TESTDIR}/foo:/bar:ro" -c -e "${TESTDIR}/my_image.simg"
  )

  # Instance_start special sub-sub-command
  (
    function find_any_hash_func()
    {
      echo deadbead1234567890
    }
    singular_defaultify singular-compose instance_start foo3
    source "${TESTDIR}/tappoint.txt"
    assert_array_values args instance start -B "$(get_mktemp_dir):/tmp" -B "${TESTDIR}/foo:/bar:ro" -c -e "${TESTDIR}/my_image.simg" "bar4_deadbead1234"
  )
)
end_test