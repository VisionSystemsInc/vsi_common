#!/usr/bin/env bash

if [ -z "${VSI_COMMON_DIR+set}" ]; then
  VSI_COMMON_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.."; pwd)"
fi

source "${VSI_COMMON_DIR}/tests/testlib.bsh"
source "${TESTLIB_DIR}/test_utils.bsh"
source "${VSI_COMMON_DIR}/linux/versions.bsh"

# Acquired from https://developer.nvidia.com/cuda-toolkit-archive, but some links were broken
# http://developer.download.nvidia.com/compute/cuda/1.0/linux/toolkits/NVIDIA_CUDA_Toolkit_1.0_rhel5_x86_64.run
# http://developer.download.nvidia.com/compute/cuda/1.1/Linux/toolkits/NVIDIA_CUDA_Toolkit_1.1_rhel5_x86_64.run
# http://developer.download.nvidia.com/compute/cuda/2_0/linux/toolkit/NVIDIA_CUDA_Toolkit_2.0_rhel5.1_x86_64.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_2/toolkit/cudatoolkit_2.2_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_2/toolkit/cudatoolkit_2.2_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_2/toolkit/cudatoolkit_2.2_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_2/toolkit/cudatoolkit_2.2_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_2/toolkit/cudatoolkit_2.2_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/2_3/toolkit/cudatoolkit_2.3_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/3_0/toolkit/cudatoolkit_3.0_linux_64_rhel5.3.run
# http://developer.download.nvidia.com/compute/compute/cuda/3_1/toolkit/cudatoolkit_3.1_linux_64_rhel5.4.run
# http://developer.download.nvidia.com/compute/compute/cuda/3_2_prod/toolkit/cudatoolkit_3.2.16_linux_64_rhel5.5.run
# http://developer.download.nvidia.com/compute/compute/cuda/4_0/toolkit/cudatoolkit_4.0.17_linux_64_rhel5.5.run
# http://developer.download.nvidia.com/compute/cuda/4_1/rel/toolkit/cudatoolkit_4.1.28_linux_64_rhel5.x.run
# http://developer.download.nvidia.com/compute/compute/cuda/4_0/toolkit/cudatoolkit_4.0.17_linux_64_rhel6.0.run
# http://developer.download.nvidia.com/compute/cuda/4_1/rel/toolkit/cudatoolkit_4.1.28_linux_64_rhel6.x.run
# http://developer.download.nvidia.com/compute/cuda/4_2/rel/toolkit/cudatoolkit_4.2.9_linux_64_rhel5.5.run
# http://developer.download.nvidia.com/compute/cuda/4_2/rel/toolkit/cudatoolkit_4.2.9_linux_64_rhel6.0.run
# http://developer.download.nvidia.com/compute/cuda/5_0/rel-update-1/installers/cuda_5.0.35_linux_64_rhel5.x-1.run
# http://developer.download.nvidia.com/compute/cuda/5_0/rel-update-1/installers/cuda_5.0.35_linux_64_rhel6.x-1.run
# http://developer.download.nvidia.com/compute/cuda/5_5/rel/installers/cuda_5.5.22_linux_64.run
# http://developer.download.nvidia.com/compute/cuda/6_0/rel/installers/cuda_6.0.37_linux_64.run
# http://developer.download.nvidia.com/compute/cuda/6_5/rel/installers/cuda_6.5.14_linux_64.run
# http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.28_linux.run
# http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run
# https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run
# https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run
# https://developer.nvidia.com/compute/cuda/8.0/Prod2/patches/2/cuda_8.0.61.2_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda_9.0.176_384.81_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/patches/1/cuda_9.0.176.1_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/patches/2/cuda_9.0.176.2_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/patches/3/cuda_9.0.176.3_linux-run
# https://developer.nvidia.com/compute/cuda/9.0/Prod/patches/4/cuda_9.0.176.4_linux-run
# https://developer.nvidia.com/compute/cuda/9.1/Prod/local_installers/cuda_9.1.85_387.26_linux
# https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/1/cuda_9.1.85.1_linux
# https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/2/cuda_9.1.85.2_linux
# https://developer.nvidia.com/compute/cuda/9.1/Prod/patches/3/cuda_9.1.85.3_linux
# https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda_9.2.148_396.37_linux
# https://developer.nvidia.com/compute/cuda/9.2/Prod2/patches/1/cuda_9.2.148.1_linux
# https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda_10.0.130_410.48_linux
# http://developer.download.nvidia.com/compute/cuda/10.0/Prod/patches/1/cuda_10.0.130.1_linux.run
# https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.105_418.39_linux.run
# https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.168_418.67_linux.run
# https://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_418.87.00_linux.run
# https://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run
# http://developer.download.nvidia.com/compute/cuda/11.0.1/local_installers/cuda_11.0.1_450.36.06_linux.run
# http://developer.download.nvidia.com/compute/cuda/11.0.2/local_installers/cuda_11.0.2_450.51.05_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.0.3/local_installers/cuda_11.0.3_450.51.06_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.1.0/local_installers/cuda_11.1.0_455.23.05_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.27.04_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.2.1/local_installers/cuda_11.2.1_460.32.03_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.2.2/local_installers/cuda_11.2.2_460.32.03_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.3.0/local_installers/cuda_11.3.0_465.19.01_linux.run
# https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda_11.3.1_465.19.01_linux.run
##########
# Cuda 1 #
##########
# Cuda 1.0
# --------
nvcc1='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2006 NVIDIA Corporation
Built on Thu_Jun_28_08:21:25_PDT_2007
Cuda compilation tools, release 1.0, V0.2.1221'

# Cuda 1.1
# --------
nvcc11='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2006 NVIDIA Corporation
Built on Fri_Nov_30_01:55:35_PST_2007
Cuda compilation tools, release 1.1, V0.2.1221'

##########
# Cuda 2 #
##########
# Cuda 2.0
# --------
nvcc2='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2007 NVIDIA Corporation
Built on Thu_Jun_19_03:38:28_PDT_2008
Cuda compilation tools, release 2.0, V0.2.1221'

# Cuda 2.1
# --------
nvcc21='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2007 NVIDIA Corporation
Built on Wed_Dec__3_16:25:17_PST_2008
Cuda compilation tools, release 2.1, V0.2.1221'

# Cuda 2.2
# --------
nvcc22='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2009 NVIDIA Corporation
Built on Thu_Apr__9_05:05:52_PDT_2009
Cuda compilation tools, release 2.2, V0.2.1221'

# Cuda 2.3
# --------
nvcc23='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2009 NVIDIA Corporation
Built on Thu_Jul_30_09:24:36_PDT_2009
Cuda compilation tools, release 2.3, V0.2.1221'

##########
# Cuda 3 #
##########
# Cuda 3.0
# --------
nvcc3='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2009 NVIDIA Corporation
Built on Fri_Feb_19_19:12:59_PST_2010
Cuda compilation tools, release 3.0, V0.2.1221'

# Cuda 3.1
# --------
nvcc31='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2010 NVIDIA Corporation
Built on Mon_Jun__7_18:56:31_PDT_2010
Cuda compilation tools, release 3.1, V0.2.1221'

# Cuda 3.2
# --------
nvcc32='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2010 NVIDIA Corporation
Built on Wed_Nov__3_16:16:57_PDT_2010
Cuda compilation tools, release 3.2, V0.2.1221'

##########
# Cuda 4 #
##########
# Cuda 4.0
# --------
nvcc4='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2011 NVIDIA Corporation
Built on Thu_May_12_11:09:45_PDT_2011
Cuda compilation tools, release 4.0, V0.2.1221'

# Cuda 4.1
# --------
nvcc41='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2011 NVIDIA Corporation
Built on Thu_Jan_12_14:41:45_PST_2012
Cuda compilation tools, release 4.1, V0.2.1221'

# Cuda 4.2
# --------
nvcc42='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2012 NVIDIA Corporation
Built on Thu_Apr__5_00:24:31_PDT_2012
Cuda compilation tools, release 4.2, V0.2.1221'

##########
# Cuda 5 #
##########
# Cuda 5.0
# --------
nvcc5='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2012 NVIDIA Corporation
Built on Fri_Sep_21_17:28:58_PDT_2012
Cuda compilation tools, release 5.0, V0.2.1221'

# Cuda 5.5
# --------
nvcc55='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2013 NVIDIA Corporation
Built on Wed_Jul_17_18:36:13_PDT_2013
Cuda compilation tools, release 5.5, V5.5.0'

##########
# Cuda 6 #
##########
# Cuda 6.0
# --------
nvcc6='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2013 NVIDIA Corporation
Built on Thu_Mar_13_11:58:58_PDT_2014
Cuda compilation tools, release 6.0, V6.0.1'

# Cuda 6.5
# --------
nvcc65='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2014 NVIDIA Corporation
Built on Thu_Jul_17_21:41:27_CDT_2014
Cuda compilation tools, release 6.5, V6.5.12'

##########
# Cuda 7 #
##########
# Cuda 7.0
# --------
nvcc7='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2015 NVIDIA Corporation
Built on Mon_Feb_16_22:59:02_CST_2015
Cuda compilation tools, release 7.0, V7.0.27'

# Cuda 7.5
# --------
nvcc75='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2015 NVIDIA Corporation
Built on Tue_Aug_11_14:27:32_CDT_2015
Cuda compilation tools, release 7.5, V7.5.17'
# This didn't start until cuda 7.5
version75='CUDA Version 7.5.18'

##########
# Cuda 8 #
##########
# Cuda 8.0
# --------
nvcc8='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2016 NVIDIA Corporation
Built on Sun_Sep__4_22:14:01_CDT_2016
Cuda compilation tools, release 8.0, V8.0.44'
version8='CUDA Version 8.0.44'

# Cuda 8.0 GA2
# ------------
nvcc8ga2='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2016 NVIDIA Corporation
Built on Tue_Jan_10_13:22:03_CST_2017
Cuda compilation tools, release 8.0, V8.0.61'
version8ga='CUDA Version 8.0.61'
version8ga2p2='CUDA Version 8.0.61
CUDA Patch Version 8.0.61.2'

##########
# Cuda 9 #
##########
# Cuda 9.0
# --------
nvcc9='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2017 NVIDIA Corporation
Built on Fri_Sep__1_21:08:03_CDT_2017
Cuda compilation tools, release 9.0, V9.0.176'
version9='CUDA Version 9.0.176'
version9p1='CUDA Version 9.0.176
CUDA Patch Version 9.0.176.1'
# Note patch 2 could be missing patch one, or be in a different order, which
# would actually be kinda bad, cause then patch 2 files were replaced with 1
version9p2='CUDA Version 9.0.176
CUDA Patch Version 9.0.176.1
CUDA Patch Version 9.0.176.2'
version9p3='CUDA Version 9.0.176
CUDA Patch Version 9.0.176.1
CUDA Patch Version 9.0.176.2
CUDA Patch Version 9.0.176.3'
version9p4='CUDA Version 9.0.176
CUDA Patch Version 9.0.176.1
CUDA Patch Version 9.0.176.2
CUDA Patch Version 9.0.176.3
CUDA Patch Version 9.0.176.4'

# Cuda 9.1
# --------
nvcc91='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2017 NVIDIA Corporation
Built on Fri_Nov__3_21:07:56_CDT_2017
Cuda compilation tools, release 9.1, V9.1.85'
version91='CUDA Version 9.1.85'
version91p1='CUDA Version 9.1.85
CUDA Patch Version 9.1.85.1'
version91p2='CUDA Version 9.1.85
CUDA Patch Version 9.1.85.1
CUDA Patch Version 9.1.85.2'
version91p3='CUDA Version 9.1.85
CUDA Patch Version 9.1.85.1
CUDA Patch Version 9.1.85.2
CUDA Patch Version 9.1.85.3'

# Cuda 9.2
# --------
nvcc92='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2018 NVIDIA Corporation
Built on Tue_Jun_12_23:07:04_CDT_2018
Cuda compilation tools, release 9.2, V9.2.148'
version92='CUDA Version 9.2.148'
version92p1='CUDA Version 9.2.148
CUDA Patch Version 9.2.148.1'

###########
# Cuda 10 #
###########
# Cuda 10.0
# ---------

nvcc10='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2018 NVIDIA Corporation
Built on Sat_Aug_25_21:08:01_CDT_2018
Cuda compilation tools, release 10.0, V10.0.130'
version10='CUDA Version 10.0.130'
version10p1='CUDA Version 10.0.130
CUDA Patch Version 10.0.130.1'

# Cuda 10.1
# ---------
nvcc101='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Fri_Feb__8_19:08:17_PST_2019
Cuda compilation tools, release 10.1, V10.1.105'
version101='CUDA Version 10.1.105'

# Cuda 10.1 Update 1
nvcc101u1='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Wed_Apr_24_19:10:27_PDT_2019
Cuda compilation tools, release 10.1, V10.1.168'
version101u1='CUDA Version 10.1.168'

# Cuda 10.1 Update 2
nvcc101u2='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Sun_Jul_28_19:07:16_PDT_2019
Cuda compilation tools, release 10.1, V10.1.243'
version101u2='CUDA Version 10.1.243'

# Cuda 10.2
# ---------
nvcc102='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2019 NVIDIA Corporation
Built on Wed_Oct_23_19:24:38_PDT_2019
Cuda compilation tools, release 10.2, V10.2.89'
version102='CUDA Version 10.2.89'

###########
# Cuda 11 #
###########
# Cuda 11.0
# ---------
# 11.0.1rc (now hidden)
nvcc1101='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Wed_May__6_19:09:25_PDT_2020
Cuda compilation tools, release 11.0, V11.0.167
Build cuda_11.0_bu.TC445_37.28358933_0'
# Only installed if docs are installed, from 11.0 on, this is actually the
# version of the "documentation", and which is not covered in the release notes
version1101='CUDA Version 11.0.182'

# 11.0.2 (aka 11.0)
nvcc1102='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Thu_Jun_11_22:26:38_PDT_2020
Cuda compilation tools, release 11.0, V11.0.194
Build cuda_11.0_bu.TC445_37.28540450_0'
version1102='CUDA Version 11.0.207'

# 11.0.3 (aka 11.0 Update 1)
nvcc1103='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Wed_Jul_22_19:09:09_PDT_2020
Cuda compilation tools, release 11.0, V11.0.221
Build cuda_11.0_bu.TC445_37.28845127_0'
version1103='CUDA Version 11.0.228'

# Cuda 11.1
# ---------
# 11.1.0
nvcc111='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Tue_Sep_15_19:10:02_PDT_2020
Cuda compilation tools, release 11.1, V11.1.74
Build cuda_11.1.TC455_06.29069683_0'
# No more version.txt as of 11.1.0
# version111='CUDA Version 11.1.74'

# 11.1.1
nvcc1111='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Mon_Oct_12_20:09:46_PDT_2020
Cuda compilation tools, release 11.1, V11.1.105
Build cuda_11.1.TC455_06.29190527_0'
# version1111='CUDA Version 11.1.105'

# Cuda 11.2
# ---------
# 11.2.0
nvcc112='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2020 NVIDIA Corporation
Built on Mon_Nov_30_19:08:53_PST_2020
Cuda compilation tools, release 11.2, V11.2.67
Build cuda_11.2.r11.2/compiler.29373293_0'
# version112='CUDA Version 11.2.67'

# 11.2.1
nvcc1121='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Thu_Jan_28_19:32:09_PST_2021
Cuda compilation tools, release 11.2, V11.2.142
Build cuda_11.2.r11.2/compiler.29558016_0'
# version1121='CUDA Version 11.2.146'
version1121='{
   "cuda" : {
      "name" : "CUDA SDK",
      "version" : "11.2.20210204"
   },
   "cuda_cudart" : {
      "name" : "CUDA Runtime (cudart)",
      "version" : "11.2.146"
   },
   "cuda_cuobjdump" : {
      "name" : "cuobjdump",
      "version" : "11.2.135"
   },
   "cuda_cupti" : {
      "name" : "CUPTI",
      "version" : "11.2.135"
   },
   "cuda_cuxxfilt" : {
      "name" : "CUDA cu++ filt",
      "version" : "11.2.135"
   },
   "cuda_demo_suite" : {
      "name" : "CUDA Demo Suite",
      "version" : "11.2.67"
   },
   "cuda_gdb" : {
      "name" : "CUDA GDB",
      "version" : "11.2.135"
   },
   "cuda_memcheck" : {
      "name" : "CUDA Memcheck",
      "version" : "11.2.135"
   },
   "cuda_nsight" : {
      "name" : "Nsight Eclipse Plugins",
      "version" : "11.2.135"
   },
   "cuda_nvcc" : {
      "name" : "CUDA NVCC",
      "version" : "11.2.142"
   },
   "cuda_nvdisasm" : {
      "name" : "CUDA nvdisasm",
      "version" : "11.2.135"
   },
   "cuda_nvml_dev" : {
      "name" : "CUDA NVML Headers",
      "version" : "11.2.67"
   },
   "cuda_nvprof" : {
      "name" : "CUDA nvprof",
      "version" : "11.2.135"
   },
   "cuda_nvprune" : {
      "name" : "CUDA nvprune",
      "version" : "11.2.135"
   },
   "cuda_nvrtc" : {
      "name" : "CUDA NVRTC",
      "version" : "11.2.142"
   },
   "cuda_nvtx" : {
      "name" : "CUDA NVTX",
      "version" : "11.2.67"
   },
   "cuda_nvvp" : {
      "name" : "CUDA NVVP",
      "version" : "11.2.135"
   },
   "cuda_samples" : {
      "name" : "CUDA Samples",
      "version" : "11.2.135"
   },
   "cuda_sanitizer_api" : {
      "name" : "CUDA Compute Sanitizer API",
      "version" : "11.2.135"
   },
   "libcublas" : {
      "name" : "CUDA cuBLAS",
      "version" : "11.4.1.1026"
   },
   "libcufft" : {
      "name" : "CUDA cuFFT",
      "version" : "10.4.0.135"
   },
   "libcurand" : {
      "name" : "CUDA cuRAND",
      "version" : "10.2.3.135"
   },
   "libcusolver" : {
      "name" : "CUDA cuSOLVER",
      "version" : "11.1.0.135"
   },
   "libcusparse" : {
      "name" : "CUDA cuSPARSE",
      "version" : "11.4.0.135"
   },
   "libnpp" : {
      "name" : "CUDA NPP",
      "version" : "11.3.2.139"
   },
   "libnvjpeg" : {
      "name" : "CUDA nvJPEG",
      "version" : "11.4.0.135"
   },
   "nsight_compute" : {
      "name" : "Nsight Compute",
      "version" : "2020.3.1.3"
   },
   "nsight_systems" : {
      "name" : "Nsight Systems",
      "version" : "2020.4.3.7"
   },
   "nvidia_driver" : {
      "name" : "NVIDIA Linux Driver",
      "version" : "460.32.03"
   }
}'

# 11.2.2
nvcc1122='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Feb_14_21:12:58_PST_2021
Cuda compilation tools, release 11.2, V11.2.152
Build cuda_11.2.r11.2/compiler.29618528_0'
# version1122='CUDA Version 11.2.154'
version1122='{
   "cuda" : {
      "name" : "CUDA SDK",
      "version" : "11.2.20210226"
   },
   "cuda_cudart" : {
      "name" : "CUDA Runtime (cudart)",
      "version" : "11.2.152"
   },
   "cuda_cuobjdump" : {
      "name" : "cuobjdump",
      "version" : "11.2.152"
   },
   "cuda_cupti" : {
      "name" : "CUPTI",
      "version" : "11.2.152"
   },
   "cuda_cuxxfilt" : {
      "name" : "CUDA cu++ filt",
      "version" : "11.2.152"
   },
   "cuda_demo_suite" : {
      "name" : "CUDA Demo Suite",
      "version" : "11.2.152"
   },
   "cuda_gdb" : {
      "name" : "CUDA GDB",
      "version" : "11.2.152"
   },
   "cuda_memcheck" : {
      "name" : "CUDA Memcheck",
      "version" : "11.2.152"
   },
   "cuda_nsight" : {
      "name" : "Nsight Eclipse Plugins",
      "version" : "11.2.152"
   },
   "cuda_nvcc" : {
      "name" : "CUDA NVCC",
      "version" : "11.2.152"
   },
   "cuda_nvdisasm" : {
      "name" : "CUDA nvdisasm",
      "version" : "11.2.152"
   },
   "cuda_nvml_dev" : {
      "name" : "CUDA NVML Headers",
      "version" : "11.2.152"
   },
   "cuda_nvprof" : {
      "name" : "CUDA nvprof",
      "version" : "11.2.152"
   },
   "cuda_nvprune" : {
      "name" : "CUDA nvprune",
      "version" : "11.2.152"
   },
   "cuda_nvrtc" : {
      "name" : "CUDA NVRTC",
      "version" : "11.2.152"
   },
   "cuda_nvtx" : {
      "name" : "CUDA NVTX",
      "version" : "11.2.152"
   },
   "cuda_nvvp" : {
      "name" : "CUDA NVVP",
      "version" : "11.2.152"
   },
   "cuda_samples" : {
      "name" : "CUDA Samples",
      "version" : "11.2.152"
   },
   "cuda_sanitizer_api" : {
      "name" : "CUDA Compute Sanitizer API",
      "version" : "11.2.152"
   },
   "libcublas" : {
      "name" : "CUDA cuBLAS",
      "version" : "11.4.1.1043"
   },
   "libcufft" : {
      "name" : "CUDA cuFFT",
      "version" : "10.4.1.152"
   },
   "libcurand" : {
      "name" : "CUDA cuRAND",
      "version" : "10.2.3.152"
   },
   "libcusolver" : {
      "name" : "CUDA cuSOLVER",
      "version" : "11.1.0.152"
   },
   "libcusparse" : {
      "name" : "CUDA cuSPARSE",
      "version" : "11.4.1.1152"
   },
   "libnpp" : {
      "name" : "CUDA NPP",
      "version" : "11.3.2.152"
   },
   "libnvjpeg" : {
      "name" : "CUDA nvJPEG",
      "version" : "11.4.0.152"
   },
   "nsight_compute" : {
      "name" : "Nsight Compute",
      "version" : "2020.3.1.4"
   },
   "nsight_systems" : {
      "name" : "Nsight Systems",
      "version" : "2020.4.3.7"
   },
   "nvidia_driver" : {
      "name" : "NVIDIA Linux Driver",
      "version" : "460.32.03"
   }
}'
# 11.3.0
nvcc1130='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Sun_Mar_21_19:15:46_PDT_2021
Cuda compilation tools, release 11.3, V11.3.58
Build cuda_11.3.r11.3/compiler.29745058_0'
version1130='{
   "cuda" : {
      "name" : "CUDA SDK",
      "version" : "11.3.20210326"
   },
   "cuda_cudart" : {
      "name" : "CUDA Runtime (cudart)",
      "version" : "11.3.58"
   },
   "cuda_cuobjdump" : {
      "name" : "cuobjdump",
      "version" : "11.3.58"
   },
   "cuda_cupti" : {
      "name" : "CUPTI",
      "version" : "11.3.58"
   },
   "cuda_cuxxfilt" : {
      "name" : "CUDA cu++ filt",
      "version" : "11.3.58"
   },
   "cuda_demo_suite" : {
      "name" : "CUDA Demo Suite",
      "version" : "11.3.58"
   },
   "cuda_gdb" : {
      "name" : "CUDA GDB",
      "version" : "11.3.58"
   },
   "cuda_memcheck" : {
      "name" : "CUDA Memcheck",
      "version" : "11.3.58"
   },
   "cuda_nsight" : {
      "name" : "Nsight Eclipse Plugins",
      "version" : "11.3.58"
   },
   "cuda_nvcc" : {
      "name" : "CUDA NVCC",
      "version" : "11.3.58"
   },
   "cuda_nvdisasm" : {
      "name" : "CUDA nvdisasm",
      "version" : "11.3.58"
   },
   "cuda_nvml_dev" : {
      "name" : "CUDA NVML Headers",
      "version" : "11.3.58"
   },
   "cuda_nvprof" : {
      "name" : "CUDA nvprof",
      "version" : "11.3.58"
   },
   "cuda_nvprune" : {
      "name" : "CUDA nvprune",
      "version" : "11.3.58"
   },
   "cuda_nvrtc" : {
      "name" : "CUDA NVRTC",
      "version" : "11.3.58"
   },
   "cuda_nvtx" : {
      "name" : "CUDA NVTX",
      "version" : "11.3.58"
   },
   "cuda_nvvp" : {
      "name" : "CUDA NVVP",
      "version" : "11.3.58"
   },
   "cuda_samples" : {
      "name" : "CUDA Samples",
      "version" : "11.3.58"
   },
   "cuda_sanitizer_api" : {
      "name" : "CUDA Compute Sanitizer API",
      "version" : "11.3.58"
   },
   "libcublas" : {
      "name" : "CUDA cuBLAS",
      "version" : "11.4.2.10064"
   },
   "libcufft" : {
      "name" : "CUDA cuFFT",
      "version" : "10.4.2.58"
   },
   "libcurand" : {
      "name" : "CUDA cuRAND",
      "version" : "10.2.4.58"
   },
   "libcusolver" : {
      "name" : "CUDA cuSOLVER",
      "version" : "11.1.1.58"
   },
   "libcusparse" : {
      "name" : "CUDA cuSPARSE",
      "version" : "11.5.0.58"
   },
   "libnpp" : {
      "name" : "CUDA NPP",
      "version" : "11.3.3.44"
   },
   "libnvjpeg" : {
      "name" : "CUDA nvJPEG",
      "version" : "11.4.1.58"
   },
   "nsight_compute" : {
      "name" : "Nsight Compute",
      "version" : "2021.1.0.18"
   },
   "nsight_systems" : {
      "name" : "Nsight Systems",
      "version" : "2021.1.3.14"
   },
   "nvidia_driver" : {
      "name" : "NVIDIA Linux Driver",
      "version" : "465.19.01"
   }
}'
# 11.3.1
nvcc1131='nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2021 NVIDIA Corporation
Built on Mon_May__3_19:15:13_PDT_2021
Cuda compilation tools, release 11.3, V11.3.109
Build cuda_11.3.r11.3/compiler.29920130_0'
version1131='{
   "cuda" : {
      "name" : "CUDA SDK",
      "version" : "11.3.20210513"
   },
   "cuda_cudart" : {
      "name" : "CUDA Runtime (cudart)",
      "version" : "11.3.109"
   },
   "cuda_cuobjdump" : {
      "name" : "cuobjdump",
      "version" : "11.3.58"
   },
   "cuda_cupti" : {
      "name" : "CUPTI",
      "version" : "11.3.111"
   },
   "cuda_cuxxfilt" : {
      "name" : "CUDA cu++ filt",
      "version" : "11.3.58"
   },
   "cuda_demo_suite" : {
      "name" : "CUDA Demo Suite",
      "version" : "11.3.58"
   },
   "cuda_gdb" : {
      "name" : "CUDA GDB",
      "version" : "11.3.109"
   },
   "cuda_memcheck" : {
      "name" : "CUDA Memcheck",
      "version" : "11.3.109"
   },
   "cuda_nsight" : {
      "name" : "Nsight Eclipse Plugins",
      "version" : "11.3.109"
   },
   "cuda_nvcc" : {
      "name" : "CUDA NVCC",
      "version" : "11.3.109"
   },
   "cuda_nvdisasm" : {
      "name" : "CUDA nvdisasm",
      "version" : "11.3.58"
   },
   "cuda_nvml_dev" : {
      "name" : "CUDA NVML Headers",
      "version" : "11.3.58"
   },
   "cuda_nvprof" : {
      "name" : "CUDA nvprof",
      "version" : "11.3.111"
   },
   "cuda_nvprune" : {
      "name" : "CUDA nvprune",
      "version" : "11.3.58"
   },
   "cuda_nvrtc" : {
      "name" : "CUDA NVRTC",
      "version" : "11.3.109"
   },
   "cuda_nvtx" : {
      "name" : "CUDA NVTX",
      "version" : "11.3.109"
   },
   "cuda_nvvp" : {
      "name" : "CUDA NVVP",
      "version" : "11.3.111"
   },
   "cuda_samples" : {
      "name" : "CUDA Samples",
      "version" : "11.3.58"
   },
   "cuda_sanitizer_api" : {
      "name" : "CUDA Compute Sanitizer API",
      "version" : "11.3.111"
   },
   "cuda_thrust" : {
      "name" : "CUDA Thrust",
      "version" : "11.3.109"
   },
   "libcublas" : {
      "name" : "CUDA cuBLAS",
      "version" : "11.5.1.109"
   },
   "libcufft" : {
      "name" : "CUDA cuFFT",
      "version" : "10.4.2.109"
   },
   "libcurand" : {
      "name" : "CUDA cuRAND",
      "version" : "10.2.4.109"
   },
   "libcusolver" : {
      "name" : "CUDA cuSOLVER",
      "version" : "11.1.2.109"
   },
   "libcusparse" : {
      "name" : "CUDA cuSPARSE",
      "version" : "11.6.0.109"
   },
   "libnpp" : {
      "name" : "CUDA NPP",
      "version" : "11.3.3.95"
   },
   "libnvjpeg" : {
      "name" : "CUDA nvJPEG",
      "version" : "11.5.0.109"
   },
   "nsight_compute" : {
      "name" : "Nsight Compute",
      "version" : "2021.1.1.5"
   },
   "nsight_systems" : {
      "name" : "Nsight Systems",
      "version" : "2021.1.3.14"
   },
   "nvidia_driver" : {
      "name" : "NVIDIA Linux Driver",
      "version" : "465.19.01"
   }
}'

nvccs=("${nvcc1}" "${nvcc11}"
       "${nvcc2}" "${nvcc21}" "${nvcc22}" "${nvcc23}"
       "${nvcc3}" "${nvcc31}" "${nvcc32}"
       "${nvcc4}" "${nvcc41}" "${nvcc42}"
       "${nvcc5}" "${nvcc55}"
       "${nvcc6}" "${nvcc65}"
       "${nvcc7}" "${nvcc75}"
       "${nvcc8}" "${nvcc8ga2}"
       "${nvcc9}" "${nvcc91}" "${nvcc92}"
       "${nvcc10}" "${nvcc101}" "${nvcc101u1}" "${nvcc101u2}" "${nvcc102}"
       "${nvcc1101}" "${nvcc1102}" "${nvcc1103}" "${nvcc111}" "${nvcc1111}" "${nvcc112}" "${nvcc1121}" "${nvcc1122}" "${nvcc1130}" "${nvcc1131}")

nvccs_ans=(1.0 1.1
           2.0 2.1 2.2 2.3
           3.0 3.1 3.2
           4.0 4.1 4.2
           5.0 5.5.0
           6.0.1 6.5.12
           7.0.27 7.5.17
           8.0.44 8.0.61
           9.0.176 9.1.85 9.2.148
           10.0.130 10.1.105 10.1.168 10.1.243 10.2.89
           11.0.167 11.0.194 11.0.221 11.1.74 11.1.105 11.2.67 11.2.142 11.2.152 11.3.58 11.3.109)

versions_txt=("${version75}"
              "${version8}" "${version8ga}" "${version8ga2p2}"
              "${version9}" "${version9p1}" "${version9p2}" "${version9p3}" "${version9p4}" "${version91}" "${version91p1}" "${version91p2}" "${version91p3}" "${version92}" "${version92p1}"
              "${version10}" "${version10p1}" "${version101}" "${version101u1}" "${version101u2}" "${version102}"
              "${version1101}" "${version1102}" "${version1103}")
versions_txt_ans=(7.5.18
                  8.0.44 8.0.61 8.0.61.2
                  9.0.176 9.0.176.1 9.0.176.2 9.0.176.3 9.0.176.4 9.1.85 9.1.85.1 9.1.85.2 9.1.85.3 9.2.148 9.2.148.1
                  10.0.130 10.0.130.1 10.1.105 10.1.168 10.1.243 10.2.89
                  11.0.182 11.0.207 11.0.228)
versions_json=("${version1121}" "${version1122}" "${version1130}" "${version1131}")
versions_json_ans=(11.2.142 11.2.152 11.3.58 11.3.109)

ldd_2113="ldd (GNU libc) 2.11.3
Copyright (C) 2009 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper."

glibc_2113="GNU C Library stable release version 2.11.3 (20110527), by Roland McGrath et al.
Copyright (C) 2009 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Configured for x86_64-suse-linux.
Compiled by GNU CC version 4.3.4 [gcc-4_3-branch revision 152973].
Compiled on a Linux 2.6.32 system on 2015-07-29.
Available extensions:
        crypt add-on version 2.1 by Michael Glad and others
        GNU Libidn by Simon Josefsson
        Native POSIX Threads Library by Ulrich Drepper et al
        BIND-8.2.3-T5B
For bug reporting instructions, please see:
<http://www.gnu.org/software/libc/bugs.html>."

ldd_217="ldd (GNU libc) 2.17
Copyright (C) 2012 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper."

glibc_217="GNU C Library (GNU libc) stable release version 2.17, by Roland McGrath et al.
Copyright (C) 2012 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 4.8.5 20150623 (Red Hat 4.8.5-44).
Compiled on a Linux 3.10.0 system on 2021-02-08.
Available extensions:
        The C stubs add-on version 2.1.2.
        crypt add-on version 2.1 by Michael Glad and others
        GNU Libidn by Simon Josefsson
        Native POSIX Threads Library by Ulrich Drepper et al
        BIND-8.2.3-T5B
        RT using linux kernel aio
libc ABIs: UNIQUE IFUNC
For bug reporting instructions, please see:
<http://www.gnu.org/software/libc/bugs.html>."

ldd_2339="ldd (GNU libc) 2.33.9000
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper."

glibc_2339="GNU C Library (GNU libc) development release version 2.33.9000.
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 11.1.1 20210623 (Red Hat 11.1.1-6).
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
<https://www.gnu.org/software/libc/bugs.html>."

begin_test "program versions"
(
  setup_test

  function docker()
  {
    if [ "${1}" = "--version" ]; then
      echo "Docker version 19.03.5, build 633a0ea838"
    fi
  }

  function docker_compose()
  {
    if [ "${1}" = "--version" ]; then
      echo "docker-compose version 1.24.0, build 0aa59064"
    fi
  }

  function git()
  {
    if [ "${1}" = "--version" ]; then
      echo "git version 2.24.1"
    fi
  }
  function bash_mock()
  {
    if [ "${1}" = "--version" ]; then
      echo "GNU bash, version 5.0.10(1)-release (x86_64-redhat-linux-gnu)"
      echo "Copyright (C) 2019 Free Software Foundation, Inc."
      echo "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>"
      echo
      echo "This is free software; you are free to change and redistribute it."
      echo "There is NO WARRANTY, to the extent permitted by law."
    fi
  }

  [ "$(BASH=bash_mock bash_version)" = "5.0.10r1" ]
  [ "$(git_version)" = "2.24.1" ]
  [ "$(docker_version)" = "19.03.5" ]
  [ "$(DOCKER_COMPOSE=docker_compose docker_compose_version)" = "1.24.0" ]
)
end_test

begin_test "glibc Version"
(
  setup_test

  function glibc_mock()
  {
    echo "${libc_version}"
  }
  ldd_versions=("${ldd_2113}" "${ldd_217}" "${ldd_2339}")
  glibc_versions=("${glibc_2113}" "${glibc_217}" "${glibc_2339}")
  anses=(2.11.3 2.17 2.33.9000)

  for i in "${!anses[@]}"; do
    libc_version="${ldd_versions[i]}"
    [ "$(LDD=glibc_mock glibc_version)" = "${anses[i]}" ]
    libc_version="${glibc_versions[i]}"
    [ "$(glibc_version_manual glibc_mock)" = "${anses[i]}" ]
  done
)
end_test

begin_test "OpenSSH Version"
(
  setup_test
  function ssh()
  {
    echo "${v}" >&2
  }
  version_strings=('OpenSSH_7.9p1, LibreSSL 2.7.3'
                   'OpenSSH_8.1p1, OpenSSL 1.1.1g FIPS  21 Apr 2020'
                   'OpenSSH_7.3p1, OpenSSL 0.9.8zg 14 July 2015'
                   'OpenSSH_8.3p1, OpenSSL 1.1.1g  21 Apr 2020'
                   'OpenSSH_for_Windows_7.7p1, LibreSSL 2.6.5'
                   'OpenSSH_8.2p1 Ubuntu-4ubuntu0.1, OpenSSL 1.1.1f  31 Mar 2020')
  ans_sshes=('7 9 p1' '8 1 p1' '7 3 p1' '8 3 p1' '7 7 p1' '8 2 p1')
  ans_vendors=(LibreSSL OpenSSL OpenSSL OpenSSL LibreSSL OpenSSL)
  ans_ssles=('2 7 3' '1 1 1 g' '0 9 8 zg' '1 1 1 g' '2 6 5' '1 1 1 f')
  for i in "${!version_strings[@]}"; do
    ans_ssh=(${ans_sshes[i]})
    ans_ssl=(${ans_ssles[i]})

    v="${version_strings[i]}"
    if [ "${BASH_VERSINFO[0]}" = "3" ]; then
      set +xv
      # The trace shows up in stderr on bash 3.2, and breaks the ssh mock
    fi
    openssh_version "${version_strings[i]}"
    if [ "${BASH_VERSINFO[0]}" = "3" ]; then
      set -xv
    fi
    assert_array_values ssh_version "${ans_ssh[@]}"
    assert_array_values ssl_version "${ans_ssl[@]}"
    [ "${ssl_vendor}" = "${ans_vendors[i]}" ]
  done
)
end_test

begin_test "Use version.txt to get version"
(
  setup_test

  # Out-of-order example
  [ "$(version_txt_cuda_version <(echo $'CUDA Version 9.0.176\nCUDA Patch Version 9.0.176.2\nCUDA Patch Version 9.0.176.1'))" = "9.0.176.2" ]

  # Test data
  for i in "${!versions_txt[@]}"; do
    [ "$(version_txt_cuda_version <<< "${versions_txt[i]}")" = "${versions_txt_ans[i]}" ]
  done
)
end_test

begin_test "Use version.json to get version"
(
  setup_test

  # Test data
  for i in "${!versions_json[@]}"; do
    [ "$(version_json_cuda_version <<< "${versions_json[i]}")" = "${versions_json_ans[i]}" ]
  done
)
end_test

begin_test "Get nvcc version"
(
  setup_test

  function nvcc(){ echo "${nvcc_string}";}

  for i in "${!nvccs[@]}"; do
    nvcc_string="${nvccs[i]}"
    [ "$(nvcc_version)" = "${nvccs_ans[i]}" ]
  done

  function nvcc2(){ echo "${nvcc1}";}
  [ "$(NVCC=nvcc2 nvcc_version)" = "1.0" ]
)
end_test

begin_test "gpg version"
(
  setup_test

  gpg_2022='gpg (GnuPG) 2.0.22
libgcrypt 1.5.3
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ~/.gnupg
Supported algorithms:
Pubkey: RSA, ?, ?, ELG, DSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2'


  gpg_1420='gpg (GnuPG) 1.4.20
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: ~/.gnupg
Supported algorithms:
Pubkey: RSA, RSA-E, RSA-S, ELG-E, DSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2'

  gpg_2225='gpg (GnuPG) 2.2.25
libgcrypt 1.8.8
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Home: /home/andy/.gnupg
Supported algorithms:
Pubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA
Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
        CAMELLIA128, CAMELLIA192, CAMELLIA256
Hash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
Compression: Uncompressed, ZIP, ZLIB, BZIP2'

  function gpg()
  {
    echo "${version_string}"
  }

  version_string="${gpg_2022}"
  [ "$(GPG=gpg gpg_version)" = "2.0.22" ]

  version_string="${gpg_1420}"
  [ "$(GPG=gpg gpg_version)" = "1.4.20" ]

  version_string="${gpg_2225}"
  [ "$(GPG=gpg gpg_version)" = "2.2.25" ]
)
end_test

begin_test "singularity version"
(
  setup_test

  function singularity()
  {
    echo "${sin_ver}"
  }

  sin_ver='singularity-ce version 3.11.1-1.el9'
  singularity_version_info
  assert_str_eq "${singularity_version}" "3.11.1"
  assert_str_eq "${singularity_vendor}" "singularity-ce"

  sin_ver='apptainer version 1.1.6-1.fc37'
  singularity_version_info
  assert_str_eq "${singularity_version}" "1.1.6"
  assert_str_eq "${singularity_vendor}" "apptainer"

  sin_ver='singularity version 3.7.4'
  singularity_version_info
  assert_str_eq "${singularity_version}" "3.7.4"
  assert_str_eq "${singularity_vendor}" "singularity"
)
end_test